import pytest
import json
from fastapi.testclient import TestClient
from main import app

def test_new_import_endpoint():
    """–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ POST endpoint —Å JSON body."""
    client = TestClient(app)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_products = [
        {
            "category": "electricity_plan",
            "source_url": "https://example.com/plan",
            "provider_name": "Test Provider",
            "product_id": "test-001",
            "name": "Test Plan",
            "available": True,
            "price_kwh": 0.15,
            "raw_data": {"test": True}
        }
    ]
    
    # –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
    response = client.post("/products/import", json=test_products)
    assert response.status_code == 200
    
    data = response.json()
    assert len(data) == 1
    assert data[0]["name"] == "Test Plan"
    
    print("‚úÖ –ù–æ–≤—ã–π import endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç!")

def test_legacy_import_endpoint():
    """–¢–µ—Å—Ç legacy endpoint –¥–ª—è backward compatibility."""
    client = TestClient(app)
    
    raw_json = '''[{
        "category": "mobile_plan",
        "source_url": "https://example.com/mobile",
        "provider_name": "Mobile Provider",
        "product_id": "mobile-001",
        "name": "Mobile Plan",
        "available": true,
        "monthly_cost": 30.0,
        "raw_data": {"legacy": true}
    }]'''
    
    response = client.post(
        "/products/import_legacy", 
        data=raw_json,
        headers={"Content-Type": "text/plain"}
    )
    assert response.status_code == 200
    
    data = response.json()
    assert len(data) == 1
    assert data[0]["name"] == "Mobile Plan"
    
    print("‚úÖ Legacy import endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç!")

def test_validation_errors():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏."""
    client = TestClient(app)
    
    # –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    invalid_data = [
        {
            "category": "invalid_category",  # –ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            "source_url": "not-a-url",      # –ù–µ–≤–µ—Ä–Ω—ã–π URL
            "provider_name": "",             # –ü—É—Å—Ç–æ–µ –∏–º—è
            "available": "not_boolean"       # –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø
        }
    ]
    
    response = client.post("/products/import", json=invalid_data)
    assert response.status_code == 422
    
    error_detail = response.json()["detail"]
    print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç: {error_detail}")

def test_get_products_after_import():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞."""
    client = TestClient(app)
    
    # –°–Ω–∞—á–∞–ª–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º
    test_product = [{
        "category": "internet_plan",
        "source_url": "https://example.com/internet",
        "provider_name": "Internet Provider",
        "product_id": "int-001",
        "name": "Internet Plan",
        "available": True,
        "download_speed": 100.0,
        "raw_data": {}
    }]
    
    import_response = client.post("/products/import", json=test_product)
    assert import_response.status_code == 200
    
    # –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    get_response = client.get("/products")
    assert get_response.status_code == 200
    
    products = get_response.json()
    assert len(products) > 0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç –≤ —Å–ø–∏—Å–∫–µ
    internet_plans = [p for p in products if p["name"] == "Internet Plan"]
    assert len(internet_plans) == 1
    
    print("‚úÖ GET /products –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

if __name__ == "__main__":
    test_new_import_endpoint()
    test_legacy_import_endpoint()
    test_validation_errors()
    test_get_products_after_import()
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")